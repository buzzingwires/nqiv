#Issue a simulated keyboard action to the program.
#KEY_ACTION
#quit
#page_up
#page_down
#toggle_montage
#set_montage
#set_viewing
#zoom_in
#zoom_out
#pan_left
#pan_right
#pan_up
#pan_down
#zoom_in_more
#zoom_out_more
#pan_left_more
#pan_right_more
#pan_up_more
#pan_down_more
#pan_center
#image_previous
#image_next
#montage_left
#montage_right
#montage_up
#montage_down
#montage_start
#montage_end
#toggle_stretch
#stretch
#keep_aspect_ratio
#fit
#actual_size
#keep_fit
#keep_actual_size
#keep_current_zoom
#toggle_kept_zoom
#scale_mode_nearest
#scale_mode_linear
#scale_mode_anisotropic
#toggle_scale_mode
#image_mark_toggle
#image_mark
#image_unmark
#print_marked
#montage_select_at_mouse
#image_mark_at_mouse
#image_unmark_at_mouse
#image_mark_toggle_at_mouse
#start_mouse_pan
#end_mouse_pan
#image_zoom_in
#image_zoom_out
#image_zoom_in_more
#image_zoom_out_more
#reload

#sendkey 

#Insert an image path to be opened at a particular index.
#INT(0-2147483647) STRING(spaces allowed)
#insert image 

#Delete the image from the given index.
#INT(0-2147483647)
#remove image index 

#Log to the given stream.
#STRING(spaces allowed)
append log stream stderr

#Add an image path to the be opened.
#STRING(spaces allowed)
#append image 

#Declaratively specified pruning instructions. Use help to get list of commands.
#PRUNER
#'no' will clear the option that comes after.
#'sum' <MAX> will check the addition of all checked integer values against another specified value to determine success.
#'or' will use boolean or with the result of all checks to determine success.
#'and' will use boolean and with the result of all checks to determine success.
#'unload' will cause specified image datatypes to be unloaded in the event of a failed check.
#'hard' will cause 'unload' to always work. Otherwise, they will only be unloaded if the corresponding texture is not NULL (this can prevent prematurely unloading things needed for the texture).
#'thumbnail' will cause thumbnail images to be considered by the following checks.
#'image' will cause normal images to be considered by the following checks.
#'vips' will cause the following checks to consider vips data only.
#'raw' will cause the following checks to consider raw data only.
#'surface' will cause the following checks to consider SDL surface data only.
#'texture' will cause the following checks to consider SDL texture data only.
#'loaded_ahead' <THRESHOLD> <MAX> will check for whether the number of loaded images after the threshold is greater than max.
#'loaded_behind' <THRESHOLD> <MAX> will check for whether the number of loaded images before the threshold is greater than max.
#'bytes_ahead' <THRESHOLD> <MAX> will check for whether the number of loaded bytes after the threshold is greater than max.
#'bytes_behind' <THRESHOLD> <MAX> will check for whether the number of loaded bytes before the threshold is greater than max.
#'self_opened' will check if the currently-selected image is loaded.
#'not_animated' will check if the currently-selected image is not animated. This can be run without specifying data.
append pruner or no image thumbnail texture self_opened unload vips raw surface
append pruner and texture not_animated self_opened unload vips raw surface
append pruner or texture self_opened unload raw surface
append pruner and texture not_animated no image thumbnail self_opened unload image hard vips raw surface
append pruner or thumbnail vips loaded_ahead 0 0 loaded_behind 0 0 raw loaded_ahead 0 0 loaded_behind 0 0 surface loaded_ahead 0 0 loaded_behind 0 0 texture loaded_ahead 0 0 loaded_behind 0 0 unload hard vips raw surface texture
append pruner sum 0 or thumbnail vips bytes_ahead 0 0 bytes_behind 0 0 raw bytes_ahead 0 0 bytes_behind 0 0 surface bytes_ahead 0 0 bytes_behind 0 0 texture bytes_ahead 0 0 bytes_behind 0 0 unload hard vips raw surface texture

#Add a keybind.
#<keybind>=<key_action>
#Options are separated by +
#<keybind> options:
#SDL Scancode
#'mouse#' specifies pressing a mouse button. To specify double click, add 'double'. Example: 'mouse0_double'
#'scroll_left', 'scroll_right', 'scroll_forward', 'scroll_backward'
#Modifier keys:
#'lshift', 'rshift', or 'shift' for either.
#'lctrl', 'rctrl', or 'ctrl' for either.
#'lalt', 'ralt', or 'alt' for either.
#caps
#mode
#<key_action> options:
#Key action such as for `help sendkey`
#Normal behavior is to follow behavior specified by `helptree set keypress default`
#Overrides:
#'allow_on_up'
#'deny_on_up'
#'allow_on_down'
#'deny_on_down'
#'<int>' is 0 or greater.
#'start_delay_<int>'
#'consecutive_delay_<int>'
#'delay_accel_<int>'
#'minimum_delay_<int>'

append keybind Q=quit
append keybind Home=allow_on_down+deny_on_up+montage_start
append keybind End=allow_on_down+deny_on_up+montage_end
append keybind PageUp=allow_on_down+deny_on_up+page_up
append keybind PageDown=allow_on_down+deny_on_up+page_down
append keybind Backspace=allow_on_down+deny_on_up+image_previous
append keybind Backspace=allow_on_down+deny_on_up+montage_left
append keybind Left=allow_on_down+deny_on_up+montage_left
append keybind Right=allow_on_down+deny_on_up+montage_right
append keybind Up=allow_on_down+deny_on_up+montage_up
append keybind Down=allow_on_down+deny_on_up+montage_down
append keybind Space=allow_on_down+deny_on_up+image_next
append keybind Space=allow_on_down+deny_on_up+montage_right
append keybind Return=set_viewing
append keybind M=toggle_montage
append keybind Left=allow_on_down+deny_on_up+pan_left
append keybind Up=allow_on_down+deny_on_up+pan_up
append keybind Right=allow_on_down+deny_on_up+pan_right
append keybind Down=allow_on_down+deny_on_up+pan_down
append keybind Z=allow_on_down+deny_on_up+zoom_in
append keybind shift+Z=allow_on_down+deny_on_up+zoom_out
append keybind ctrl+Z=allow_on_down+deny_on_up+zoom_in_more
append keybind ctrl+shift+Z=allow_on_down+deny_on_up+zoom_out_more
append keybind Keypad +=allow_on_down+deny_on_up+zoom_in
append keybind Keypad -=allow_on_down+deny_on_up+zoom_out
append keybind shift+Keypad +=allow_on_down+deny_on_up+zoom_in_more
append keybind shift+Keypad -=allow_on_down+deny_on_up+zoom_out_more
append keybind ctrl+Left=allow_on_down+deny_on_up+pan_left_more
append keybind ctrl+Up=allow_on_down+deny_on_up+pan_up_more
append keybind ctrl+Right=allow_on_down+deny_on_up+pan_right_more
append keybind ctrl+Down=allow_on_down+deny_on_up+pan_down_more
append keybind C=pan_center
append keybind S=toggle_stretch
append keybind '=image_mark_toggle
append keybind shift+'=print_marked
append keybind ;=allow_on_down+deny_on_up+image_mark
append keybind ;=allow_on_down+deny_on_up+montage_right
append keybind ;=allow_on_down+deny_on_up+image_next
append keybind R=reload
append keybind F=fit
append keybind A=actual_size
append keybind D=toggle_kept_zoom
append keybind T=toggle_scale_mode
append keybind shift+F=keep_fit
append keybind shift+A=keep_actual_size
append keybind shift+D=keep_current_zoom
append keybind mouse1=montage_select_at_mouse
append keybind mouse1_double=set_viewing
append keybind shift+mouse1=montage_select_at_mouse
append keybind shift+mouse1=image_mark_toggle
append keybind mouse1=allow_on_down+deny_on_up+start_mouse_pan
append keybind mouse1=end_mouse_pan
append keybind scroll_forward=zoom_in
append keybind scroll_backward=zoom_out
append keybind scroll_forward=montage_up
append keybind scroll_backward=montage_down
append keybind shift+scroll_forward=zoom_in
append keybind shift+scroll_backward=zoom_out

#Log messages this level or lower are printed.
#LOG_LEVEL(any|debug|info|warning|error)
set log level warning

#Log message format. Special messages are delimited by #. ## produces a literal #. #time:<strftime format># prints the time. #level# prints the log level.
#STRING(spaces allowed)
set log prefix #level# #time:%Y-%m-%d %T%z# 

#Set the number of worker threads used by the software. Starts as the number of threads on the machine divided by three (or one). This does not count toward VIPs threads. See 'set vips threads' for that.
#INT(1-2147483647)
set thread count 1

#Threads will update the master after processing this many events. 0 to process all.
#INT(0-2147483647)
set thread event_interval 100

#A pruning cycle will be allowed to run after this many milliseconds since the last one. 0 always allow prune cycles.
#UINT64(0-2147483647)
set thread prune_delay 2500

#In addition to an internal algorithm, wait this long to wait to let the master thread lock a worker. Longer times might produce longer loading delays, but help improve UI responsiveness.
#INT(0-2147483647)
set thread extra_wakeup_delay 20

#How long to wait for various events (such as inputs or updates from worker threads) before doing housekeeping activities (such as pruning). 0 to wait infinitely.
#INT(0-2147483647)
set thread event_timeout 12500

#Set the number of threads used by the VIPs library. The default is the number of available threads divided by two (or one). If set to 0, it is determined by the environment variable VIPS_CONCURRENCY, or if unset, the number of threads available on the machine.
#INT(0-2147483647)
set vips threads 1

#Amount to pan the zoom left with each action.
#DOUBLE(-1.000000--0.001000)
set zoom left_amount -0.050000

#Amount to pan the zoom right with each action
#DOUBLE(0.001000-1.000000)
set zoom right_amount 0.050000

#Amount to pan the zoom down with each action
#DOUBLE(0.001000-1.000000)
set zoom down_amount 0.050000

#Amount to pan the zoom up with each action
#DOUBLE(-1.000000--0.001000)
set zoom up_amount -0.050000

#Amount to pan the zoom out with each action
#DOUBLE(0.001000-100.000000)
set zoom out_amount 0.050000

#Amount to pan the zoom in with each action
#DOUBLE(-100.000000--0.001000)
set zoom in_amount -0.050000

#Higher amount to pan the zoom left with each action.
#DOUBLE(-1.000000--0.001000)
set zoom left_amount_more -0.200000

#Higher amount to pan the zoom right with each action
#DOUBLE(0.001000-1.000000)
set zoom right_amount_more 0.200000

#Higher amount to pan the zoom down with each action
#DOUBLE(0.001000-1.000000)
set zoom down_amount_more 0.200000

#Higher amount to pan the zoom up with each action
#DOUBLE(-1.000000--0.001000)
set zoom up_amount_more -0.200000

#Higher amount to pan the zoom out with each action
#DOUBLE(0.001000-100.000000)
set zoom out_amount_more 0.200000

#Higher amount to pan the zoom in with each action
#DOUBLE(-100.000000--0.001000)
set zoom in_amount_more -0.200000

#This is multiplied against x axis panning caused by relative motion (like mouse panning)
#DOUBLE(-100.000000-100.000000)
set zoom up_coordinate_x_times -2.000000

#This is multiplied against y axis panning caused by relative motion (like mouse panning)
#DOUBLE(-100.000000-100.000000)
set zoom up_coordinate_y_times -2.000000

#Default zoom setting when loading an image- 'keep' old zoom, 'fit' to display, or set 'actual_size'.
#STRING(spaceless)
set zoom default fit

#Set scale mode used for SDL textures. Options are: 'nearest', 'linear', and 'best' or 'anisotropic'.
#STRING(spaceless)
set zoom scale_mode anisotropic

#Path thumbnails are stored under. This directory must exist.
#STRING(spaces allowed)
set thumbnail path 

#Number of pixels to resize thumbnails by with 'zoom' action in montage mode.
#INT(1-2147483647)
set thumbnail size_adjust 10

#Higher number of pixels to resize thumbnails by with 'zoom' action in montage mode.
#INT(1-2147483647)
set thumbnail size_adjust_more 50

#Whether to read thumbnails from the disk.
#BOOL(true|false)
set thumbnail load false

#Whether to save thumbnails to the disk. Note that if thumbnail_load is not set to true, then thumbnails will always be saved, even if they are up to date on the disk.
#BOOL(true|false)
set thumbnail save false

#Width and height of thumbnails are the same value.
#INT(1-2147483647)
set thumbnail size 256

#If an animated image does not provide a frame time, use this.
#INT(1-2147483647)
set default_frame_time 100

#Before a key is registered, it must be pressed for this long.
#INT(0-2147483647)
set keypress default start_delay 0

#This is the starting delay for repeating a key.
#INT(0-2147483647)
set keypress default repeat_delay 35

#The repeat delay will be reduced by this amount for each repetition.
#INT(0-2147483647)
set keypress default delay_accel 10

#The delay will never be less than this.
#INT(0-2147483647)
set keypress default minimum_delay 5

#Register releasing of the key.
#BOOL(true|false)
set keypress default send_on_up true

#Register pressing of the key.
#BOOL(true|false)
set keypress default send_on_down false

#Color of background.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color background 0 0 0 255

#Color of image area when there's an error loading.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color error 255 0 0 255

#Color of image area when image is still loading.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color loading 0 0 0 255

#Color of box around selected image.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color selection 255 255 0 255

#Color of dashed box around marked image.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color mark 255 255 255 255

#The background of a transparent image is rendered as checkers. This is the first color.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color alpha_background_one 60 60 60 255

#The background of a transparent image is rendered as checkers. This is the second color.
#UINT8(0-255) UINT8(0-255) UINT8(0-255) UINT8(0-255)
set color alpha_background_two 40 40 40 255

#This number of images ahead of the current montage are loaded.
#INT(0-2147483647)
set preload ahead 0

#This number of images behind of the current montage are loaded.
#INT(0-2147483647)
set preload behind 0

#Normally, if the image is larger than the platform's maximum texture size, it will be reloaded for each zoom. This keeps the normal behavior with the entire image downsized.
#BOOL(true|false)
set no_resample_oversized true

#Determine whether the loading indicator is rendered in image mode (achieve the same in montage mode by setting `set color loading` to match `set color background`).
#BOOL(true|false)
set show loading_indicator true

#Set the width of the program window.
#INT(1-2147483647)
set window width 800

#Set the height of the program window.
#INT(1-2147483647)
set window height 600

#Quit if there are errors parsing commands.
#BOOL(true|false)
set cmd parse_error_quit true

#Quit if there are errors applying correctly-parsed commands.
#BOOL(true|false)
set cmd apply_error_quit true

